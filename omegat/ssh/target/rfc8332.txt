





Internet Engineering Task Force (IETF)                          D. Bider
Request for Comments: 8332                               Bitvise Limited
Updates: 4252, 4253                                           March 2018
Category: Standards Track
ISSN: 2070-1721


                Secure Shell (SSH) プロトコルでの SHA-256 と SHA-512 を用いたRSA鍵の利用

概要

   このメモは, RFC 4252 と 4253 を更新して, SSH の接続でのサーバとクライアントの認証に SHA-256 と SHA-512 を用いる RSA 鍵を利用する新しい公開鍵アルゴリズムを定義する.

このメモの位置づけ

   これは, インターネット標準化課程文書だ.

   この文書は, Internet Engineering Task Force (IETF) の成果物だ.  IETF コミュニティの合意を表わしている.  公開のレビューを受けており, Internet Engineering Steering Group (IESG) によって発行が認められた.  インターネット標準についてさらなる情報は RFC 7841 の 2節にある.

   この文書の現在の状態についての情報, 訂正情報, フィードバックを提供する方法は, http://www.rfc-editor.org/info/rfc8332 で得られる.






















Bider                        Standards Track                    [Page 1]

RFC 8332        Use of RSA Keys with SHA-256 and SHA-512      March 2018


著作権情報

   Copyright (c) 2018 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

   This document may contain material from IETF Documents or IETF
   Contributions published or made publicly available before November
   10, 2008.  The person(s) controlling the copyright in some of this
   material may not have granted the IETF Trust the right to allow
   modifications of such material outside the IETF Standards Process.
   Without obtaining an adequate license from the person(s) controlling
   the copyright in such materials, this document may not be modified
   outside the IETF Standards Process, and derivative works of it may
   not be created outside the IETF Standards Process, except to format
   it for publication as an RFC or to translate it into languages other
   than English.

目次

   1概要と原理. . . . . . . . . . . . . . . . . .   3
     1.1.  要件に関する用語 . . . . . . . . . . . . . . . .   3
     1.2.  通信のエンコーディングの用語 . . . . . . . . . . . . . . . .   3
   2.  公開鍵の形式 対 公開鍵アルゴリズム  . . . . . . . . .   3
   3.  新しい RSA 公開鍵アルゴリズム . . . . . . . . . . . . . . . .   4
     3.1.  サーバ認証への利用 . . . . . . . . . . . . . .   5
     3.2.  クライアント認証への利用 . . . . . . . . . . . . . .   5
     3.3.  サーバでサポートされている公開鍵アルゴリズムの発見 .   6
   4.  IANA の考察 . . . . . . . . . . . . . . . . . . . . .   6
   5.  セキュリティの考察 . . . . . . . . . . . . . . . . . . .   7
     5.1.  鍵サイズと署名ハッシュ . . . . . . . . . . . . . . .   7
     5.2.  移行  . . . . . . . . . . . . . . . . . . . . . . .   7
     5.3.  PKCS #1 v1.5 パディングと署名の検証  . . . . .   7
   6.  リファレンス  . . . . . . . . . . . . . . . . . . . . . . . . .   8
     6.1.  標準のリファレンス  . . . . . . . . . . . . . . . . . .   8
     6.2.  情報のリファレンス . . . . . . . . . . . . . . . . .   8
   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .   9
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   9




Bider                        Standards Track                    [Page 2]

RFC 8332        Use of RSA Keys with SHA-256 and SHA-512      March 2018


1概要と原理

   セキュア シェル (SSH) は, インターネットでの安全な通信のための一般的なプロトコルだ.  [RFC4253] にて, SSH はもともと RSA と SHA-1 を用いるクライアントとサーバ認証のための公開鍵アルゴリズム "ssh-rsa" と 1024-bit DSA と SHA-1 を用いる "ssh-dss" を定義した.  これらのアルゴリズムは現在欠陥があると考えられている.  アメリカ政府での利用では, NIST は 1024-bit RSA と DSA の利用と SHA-1 の署名への利用を許可していない [NIST.800-131A].

   このメモは, RFC 4252 と 4253 を更新して, SHA-256 と SHA-512 を用いる新しい RSA 鍵と既存の鍵の相互利用ができる新しい公開鍵アルゴリズムを定義する.

1.1.  要件に関する用語

   この文書でのキーワード "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",  "OPTIONAL" は, ここで示しているようにすべて大文字で出現した場合のみ, BCP 16 [RFC2119] [RFC8174] で記述されているように解釈される. 

1.2.  通信のエンコーディングの用語

   この文書での通信エンコーディングの種類 -- "boolean", "byte", "string", "mpint" は [RFC4251] に記述されている意味を持つ

2.  公開鍵の形式 対 公開鍵アルゴリズム 

   [RFC4252] で,  "public key algorithm"  の概念は, 1つのアルゴリズム名と次のものとの関係を確立するのに用いられている:

   A.  秘密/公開鍵ペアを生成し検証するのに用いられる手続き
   B.  公開鍵を符号化するのに用いられる形式
   C.  署名を計算し符号化し検証するのに用いられる手続き

   この文書では, A と B だけを識別するために用語 "public key format" を用いる.  用語 "public key algorithm" は 3つすべての面, A, B, C を識別するのに用い続ける.











Bider                        Standards Track                    [Page 3]

RFC 8332        Use of RSA Keys with SHA-256 and SHA-512      March 2018


3.  新しい RSA 公開鍵アルゴリズム

   このメモは, 公開鍵アルゴリズムの利用をSSHの中でどのように表明するかを指定するのに, [RFC4253] スタイルと命名規則を採用する.

   次の新しい公開鍵アルゴリズムが定義される:

     rsa-sha2-256        RECOMMENDED    sign    Raw RSA key
     rsa-sha2-512        OPTIONAL       sign    Raw RSA key

   これらのアルゴリズムは, サーバ認証のための SSH トランスポート層 [RFC4253] の利用にもクライアント認証のための認証層 [RFC4252] の利用にも適している.

   RSA の鍵はハッシュ関数の選択には依存しないので, 新しい公開鍵アルゴリズムは [RFC4253] で定義された ssh-rsa 公開鍵形式を再利用する.

   string    "ssh-rsa"
   mpint     e
   mpint     n

   "ssh-rsa" というエンコードされた文字列も含めて, "ssh-rsa" 形式のすべての面が保持される.  これにより, すでに信用された鍵指紋を再エンコードしたり影響を与えたりすることなく新しい公開鍵アルゴリズムを既存の RSA 鍵と一緒に利用できる.

   これらのアルゴリズムを用いる署名と検証は, SHA-2 [SHS] をハッシュとして用いる [RFC8017] の RSASSA-PKCS1-v1_5 方式に従って実行される.

   "rsa-sha2-256" アルゴリズムには, , SHA-256 ハッシュが用いられる.
   "rsa-sha2-512" アルゴリズムには, , SHA-512 ハッシュが用いられる.

   署名の結果は次のようにエンコードされる:

   string   "rsa-sha2-256" / "rsa-sha2-512"
   string    rsa_signature_blob

   The value for 'rsa_signature_blob' is encoded as a string that
   contains an octet string S (which is the output of RSASSA-PKCS1-v1_5)
   and that has the same length (in octets) as the RSA modulus.  When S
   contains leading zeros, there exist signers that will send a shorter
   encoding of S that omits them.  A verifier MAY accept shorter
   encodings of S with one or more leading zeros omitted.






Bider                        Standards Track                    [Page 4]

RFC 8332        Use of RSA Keys with SHA-256 and SHA-512      March 2018


3.1.  Use for Server Authentication

   To express support and preference for one or both of these algorithms
   for server authentication, the SSH client or server includes one or
   both algorithm names, "rsa-sha2-256" and/or "rsa-sha2-512", in the
   name-list field "server_host_key_algorithms" in the SSH_MSG_KEXINIT
   packet [RFC4253].  If one of the two host key algorithms is
   negotiated, the server sends an "ssh-rsa" public key as part of the
   negotiated key exchange method (e.g., in SSH_MSG_KEXDH_REPLY) and
   encodes a signature with the appropriate signature algorithm name --
   either "rsa-sha2-256" or "rsa-sha2-512".

3.2.  Use for Client Authentication

   To use this algorithm for client authentication, the SSH client sends
   an SSH_MSG_USERAUTH_REQUEST message [RFC4252] encoding the
   "publickey" method and encoding the string field "public key
   algorithm name" with the value "rsa-sha2-256" or "rsa-sha2-512".  The
   "public key blob" field encodes the RSA public key using the
   "ssh-rsa" public key format.

   For example, as defined in [RFC4252] and [RFC4253], an SSH
   "publickey" authentication request using an "rsa-sha2-512" signature
   would be properly encoded as follows:

     byte      SSH_MSG_USERAUTH_REQUEST
     string    user name
     string    service name
     string    "publickey"
     boolean   TRUE
     string    "rsa-sha2-512"
     string    public key blob:
         string    "ssh-rsa"
         mpint     e
         mpint     n
     string    signature:
         string    "rsa-sha2-512"
         string    rsa_signature_blob

   If the client includes the signature field, the client MUST encode
   the same algorithm name in the signature as in
   SSH_MSG_USERAUTH_REQUEST -- either "rsa-sha2-256" or "rsa-sha2-512".
   If a server receives a mismatching request, it MAY apply arbitrary
   authentication penalties, including but not limited to authentication
   failure or disconnect.






Bider                        Standards Track                    [Page 5]

RFC 8332        Use of RSA Keys with SHA-256 and SHA-512      March 2018


   OpenSSH 7.2 (but not 7.2p2) incorrectly encodes the algorithm in the
   signature as "ssh-rsa" when the algorithm in SSH_MSG_USERAUTH_REQUEST
   is "rsa-sha2-256" or "rsa-sha2-512".  In this case, the signature
   does actually use either SHA-256 or SHA-512.  A server MAY, but is
   not required to, accept this variant or another variant that
   corresponds to a good-faith implementation and is considered safe to
   accept.

3.3.  Discovery of Public Key Algorithms Supported by Servers

   Implementation experience has shown that there are servers that apply
   authentication penalties to clients attempting public key algorithms
   that the SSH server does not support.

   Servers that accept rsa-sha2-* signatures for client authentication
   SHOULD implement the extension negotiation mechanism defined in
   [RFC8308], including especially the "server-sig-algs" extension.

   When authenticating with an RSA key against a server that does not
   implement the "server-sig-algs" extension, clients MAY default to an
   "ssh-rsa" signature to avoid authentication penalties.  When the new
   rsa-sha2-* algorithms have been sufficiently widely adopted to
   warrant disabling "ssh-rsa", clients MAY default to one of the new
   algorithms.

4.  IANA の考慮

   IANA has updated the "Secure Shell (SSH) Protocol Parameters"
   registry, established with [RFC4250], to extend the table "Public Key
   Algorithm Names" [IANA-PKA] as follows.

   -  To the immediate right of the column "Public Key Algorithm Name",
      a new column has been added, titled "Public Key Format".  For
      existing entries, the column "Public Key Format" has been assigned
      the same value as under "Public Key Algorithm Name".

   -  Immediately following the existing entry for "ssh-rsa", two
      sibling entries have been added:

      P. K. Alg. Name    P. K. Format      Reference   Note
      rsa-sha2-256       ssh-rsa           RFC 8332    Section 3
      rsa-sha2-512       ssh-rsa           RFC 8332    Section 3









Bider                        Standards Track                    [Page 6]

RFC 8332        Use of RSA Keys with SHA-256 and SHA-512      March 2018


5.  セキュリティの考察

   The security considerations of [RFC4251] apply to this document.

5.1.  Key Size and Signature Hash

   The National Institute of Standards and Technology (NIST) Special
   Publication 800-131A, Revision 1 [NIST.800-131A] disallows RSA and
   DSA keys shorter than 2048 bits for US government use.  The same
   document disallows the SHA-1 hash function for digital signature
   generation, except under NIST's protocol-specific guidance.

   It is prudent to follow this advice also outside of US government
   use.

5.2.  Transition

   This document is based on the premise that RSA is used in
   environments where a gradual, compatible transition to improved
   algorithms will be better received than one that is abrupt and
   incompatible.  It advises that SSH implementations add support for
   new RSA public key algorithms along with SSH_MSG_EXT_INFO and the
   "server-sig-algs" extension to allow coexistence of new deployments
   with older versions that support only "ssh-rsa".  Nevertheless,
   implementations SHOULD start to disable "ssh-rsa" in their default
   configurations as soon as the implementers believe that new RSA
   signature algorithms have been widely adopted.

5.3.  PKCS #1 v1.5 Padding and Signature Verification

   This document prescribes RSASSA-PKCS1-v1_5 signature padding because:

   (1)  RSASSA-PSS is not universally available to all implementations;
   (2)  PKCS #1 v1.5 is widely supported in existing SSH
        implementations;
   (3)  PKCS #1 v1.5 is not known to be insecure for use in this scheme.

   Implementers are advised that a signature with RSASSA-PKCS1-v1_5
   padding MUST NOT be verified by applying the RSA key to the
   signature, and then parsing the output to extract the hash.  This may
   give an attacker opportunities to exploit flaws in the parsing and
   vary the encoding.  Verifiers MUST instead apply RSASSA-PKCS1-v1_5
   padding to the expected hash, then compare the encoded bytes with the
   output of the RSA operation.







Bider                        Standards Track                    [Page 7]

RFC 8332        Use of RSA Keys with SHA-256 and SHA-512      March 2018


6.  References

6.1.  Normative References

   [SHS]      NIST, "Secure Hash Standard (SHS)", FIPS Publication
              180-4, August 2015,
              <http://dx.doi.org/10.6028/NIST.FIPS.180-4>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC4251]  Ylonen, T. and C. Lonvick, Ed., "The Secure Shell (SSH)
              Protocol Architecture", RFC 4251, DOI 10.17487/RFC4251,
              January 2006, <https://www.rfc-editor.org/info/rfc4251>.

   [RFC4252]  Ylonen, T. and C. Lonvick, Ed., "The Secure Shell (SSH)
              Authentication Protocol", RFC 4252, DOI 10.17487/RFC4252,
              January 2006, <https://www.rfc-editor.org/info/rfc4252>.

   [RFC4253]  Ylonen, T. and C. Lonvick, Ed., "The Secure Shell (SSH)
              Transport Layer Protocol", RFC 4253, DOI 10.17487/RFC4253,
              January 2006, <https://www.rfc-editor.org/info/rfc4253>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8308]  Bider, D., "Extension Negotiation in the Secure Shell
              (SSH) Protocol", RFC 8308, DOI 10.17487/RFC8308, March
              2018, <https://www.rfc-editor.org/info/rfc8308>.

6.2.  Informative References

   [NIST.800-131A]
              NIST, "Transitions: Recommendation for Transitioning the
              Use of Cryptographic Algorithms and Key Lengths", NIST
              Special Publication 800-131A, Revision 1,
              DOI 10.6028/NIST.SP.800-131Ar1, November 2015,
              <http://nvlpubs.nist.gov/nistpubs/SpecialPublications/
              NIST.SP.800-131Ar1.pdf>.

   [RFC4250]  Lehtinen, S. and C. Lonvick, Ed., "The Secure Shell (SSH)
              Protocol Assigned Numbers", RFC 4250,
              DOI 10.17487/RFC4250, January 2006,
              <https://www.rfc-editor.org/info/rfc4250>.




Bider                        Standards Track                    [Page 8]

RFC 8332        Use of RSA Keys with SHA-256 and SHA-512      March 2018


   [RFC8017]  Moriarty, K., Ed., Kaliski, B., Jonsson, J., and A. Rusch,
              "PKCS #1: RSA Cryptography Specifications Version 2.2",
              RFC 8017, DOI 10.17487/RFC8017, November 2016,
              <https://www.rfc-editor.org/info/rfc8017>.

   [IANA-PKA]
              IANA, "Secure Shell (SSH) Protocol Parameters",
              <https://www.iana.org/assignments/ssh-parameters/>.

Acknowledgments

   Thanks to Jon Bright, Niels Moeller, Stephen Farrell, Mark D.
   Baushke, Jeffrey Hutzelman, Hanno Boeck, Peter Gutmann, Damien
   Miller, Mat Berchtold, Roumen Petrov, Daniel Migault, Eric Rescorla,
   Russ Housley, Alissa Cooper, Adam Roach, and Ben Campbell for
   reviews, comments, and suggestions.

Author's Address

   Denis Bider
   Bitvise Limited
   4105 Lombardy Court
   Colleyville, Texas  76034
   United States of America

   Email: ietf-ssh3@denisbider.com
   URI:   https://www.bitvise.com/
























Bider                        Standards Track                    [Page 9]

